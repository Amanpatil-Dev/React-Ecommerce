{"ast":null,"code":"var _jsxFileName = \"/Users/amanpatil/Desktop/My Mac/FrontEnd Mentor/ecommerce-product-page-main/01-starting-setup/src/store/CartProvider.js\",\n    _s = $RefreshSig$();\n\nimport { useReducer } from \"react\";\nimport CartContext from \"./cart-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultValue = {\n  items: [],\n  totalAmount: 0\n};\n\nconst reducerCartHandler = (state, action) => {\n  if (action.type === 'ADD') {\n    console.log('came here');\n    const totalAmount = state.totalAmount + action.item.price * action.item.quantity; //search if the new product is in the cart or not\n\n    const existingProductIndex = state.items.findIndex(item => item.id === action.item.id);\n    const existingProduct = state.items[existingProductIndex];\n    let UpdatedItems;\n\n    if (existingProduct) {\n      const updatedItem = { ...existingProduct,\n        quantity: existingProduct.quantity + action.item.quantity\n      };\n      UpdatedItems = [...state.items];\n      UpdatedItems[existingProductIndex] = updatedItem;\n    } else {\n      UpdatedItems = state.items.concat(action.item);\n    }\n\n    return {\n      items: UpdatedItems,\n      totalAmount: totalAmount,\n      img: action.productImage\n    };\n  }\n\n  if (action.type === 'DELETE') {\n    const existingProductIndex = state.items.findIndex(item => item.id === action.id);\n    const existingProduct = state.items[existingProductIndex];\n    let deleteItem;\n\n    if (existingProduct) {\n      deleteItem = [];\n    }\n\n    return {\n      items: deleteItem,\n      totalAmount: 0,\n      img: undefined\n    };\n  }\n};\n\nfunction CartProvider(props) {\n  _s();\n\n  const [cartState, dispatchCartState] = useReducer(reducerCartHandler, defaultValue);\n\n  const addItemToCartHandler = item => {\n    dispatchCartState({\n      type: 'ADD',\n      item: item\n    });\n  };\n\n  const removeitemFromCartHandler = id => {\n    dispatchCartState({\n      type: 'DELETE',\n      id: id\n    });\n  };\n\n  const cartContext = {\n    items: cartState.items,\n    addItem: addItemToCartHandler,\n    removeItem: removeitemFromCartHandler,\n    img: cartState.img,\n    totalAmount: cartState.totalAmount\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 12\n  }, this);\n}\n\n_s(CartProvider, \"Pt+qzqrV17qID7mwhEdayoD7Kzc=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["/Users/amanpatil/Desktop/My Mac/FrontEnd Mentor/ecommerce-product-page-main/01-starting-setup/src/store/CartProvider.js"],"names":["useReducer","CartContext","defaultValue","items","totalAmount","reducerCartHandler","state","action","type","console","log","item","price","quantity","existingProductIndex","findIndex","id","existingProduct","UpdatedItems","updatedItem","concat","img","productImage","deleteItem","undefined","CartProvider","props","cartState","dispatchCartState","addItemToCartHandler","removeitemFromCartHandler","cartContext","addItem","removeItem","children"],"mappings":"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","sourcesContent":["import { useReducer } from \"react\";\nimport CartContext from \"./cart-context\";\nconst defaultValue = {\n    items: [],\n    totalAmount: 0\n\n}\nconst reducerCartHandler = (state, action) => {\n    if (action.type === 'ADD') {\n        console.log('came here')\n\n        const totalAmount = state.totalAmount + action.item.price * action.item.quantity\n\n        //search if the new product is in the cart or not\n        const existingProductIndex = state.items.findIndex(item => item.id === action.item.id)\n        const existingProduct = state.items[existingProductIndex]\n        let UpdatedItems\n\n        if (existingProduct) {\n            const updatedItem = {\n                ...existingProduct,\n                quantity: existingProduct.quantity + action.item.quantity\n            }\n\n            UpdatedItems = [...state.items]\n            UpdatedItems[existingProductIndex] = updatedItem\n        } else {\n            UpdatedItems = state.items.concat(action.item);\n\n\n        }\n\n\n        return {\n            items: UpdatedItems,\n            totalAmount: totalAmount,\n            img: action.productImage\n        }\n    }\n    if(action.type ==='DELETE'){\n        const existingProductIndex=state.items.findIndex((item)=> item.id === action.id)\n\n        const existingProduct=state.items[existingProductIndex]\n        \n        let deleteItem;\n        if(existingProduct){\n            deleteItem=[]\n            \n        }\n\n        return{\n            items:deleteItem,\n            totalAmount:0,\n            img:undefined\n        }\n    }\n\n}\n\nfunction CartProvider(props) {\n\n    const [cartState, dispatchCartState] = useReducer(reducerCartHandler, defaultValue)\n\n    const addItemToCartHandler = (item) => {\n        dispatchCartState({ type: 'ADD', item: item })\n    }\n    const removeitemFromCartHandler=(id)=>{\n        dispatchCartState({type:'DELETE',id:id})\n    }\n  \n    const cartContext = {\n        items: cartState.items,\n        addItem: addItemToCartHandler,\n        removeItem:removeitemFromCartHandler,\n        img: cartState.img,\n        totalAmount:cartState.totalAmount\n    }\n\n    return <CartContext.Provider value={cartContext}>\n        {props.children}\n    </CartContext.Provider>\n\n}\n\nexport default CartProvider"]},"metadata":{},"sourceType":"module"}