{"ast":null,"code":"var _jsxFileName = \"/Users/amanpatil/Desktop/My Mac/FrontEnd Mentor/ecommerce-product-page-main/01-starting-setup/src/store/CartProvider.js\",\n    _s = $RefreshSig$();\n\nimport { useReducer } from \"react\";\nimport CartContext from \"./cart-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultValue = {\n  items: [],\n  totalAmount: 0\n};\n\nconst reducerCartHandler = (state, action) => {\n  if (action.type === 'ADD') {\n    const totalAmount = state.totalAmount + action.item.price * action.item.quantity;\n    const existingProduct = state.items.findIndex(action.item.id);\n    console.log(existingProduct);\n    const UpdatedItems = state.items.concat(action.item);\n    return {\n      items: UpdatedItems,\n      totalAmount: totalAmount,\n      img: action.productImage\n    };\n  }\n};\n\nfunction CartProvider(props) {\n  _s();\n\n  const [cartState, dispatchCartState] = useReducer(reducerCartHandler, defaultValue);\n\n  const addItemToCartHandler = item => {\n    dispatchCartState({\n      type: 'ADD',\n      item: item\n    });\n  };\n\n  const cartContext = {\n    items: cartState.items,\n    addItem: addItemToCartHandler,\n    img: cartState.img\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 12\n  }, this);\n}\n\n_s(CartProvider, \"qK1SHF8uTpOFHopUByj/rzfEWmU=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["/Users/amanpatil/Desktop/My Mac/FrontEnd Mentor/ecommerce-product-page-main/01-starting-setup/src/store/CartProvider.js"],"names":["useReducer","CartContext","defaultValue","items","totalAmount","reducerCartHandler","state","action","type","item","price","quantity","existingProduct","findIndex","id","console","log","UpdatedItems","concat","img","productImage","CartProvider","props","cartState","dispatchCartState","addItemToCartHandler","cartContext","addItem","children"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,OAAOC,WAAP,MAAwB,gBAAxB;;AACA,MAAMC,YAAY,GAAC;AACfC,EAAAA,KAAK,EAAC,EADS;AAEfC,EAAAA,WAAW,EAAC;AAFG,CAAnB;;AAKA,MAAMC,kBAAkB,GAAE,CAACC,KAAD,EAAOC,MAAP,KAAgB;AACtC,MAAGA,MAAM,CAACC,IAAP,KAAgB,KAAnB,EAAyB;AAErB,UAAMJ,WAAW,GAAEE,KAAK,CAACF,WAAN,GAAmBG,MAAM,CAACE,IAAP,CAAYC,KAAZ,GAAoBH,MAAM,CAACE,IAAP,CAAYE,QAAtE;AACA,UAAMC,eAAe,GAACN,KAAK,CAACH,KAAN,CAAYU,SAAZ,CAAsBN,MAAM,CAACE,IAAP,CAAYK,EAAlC,CAAtB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,eAAZ;AACA,UAAMK,YAAY,GAACX,KAAK,CAACH,KAAN,CAAYe,MAAZ,CAAmBX,MAAM,CAACE,IAA1B,CAAnB;AAEA,WAAO;AACHN,MAAAA,KAAK,EAACc,YADH;AAEHb,MAAAA,WAAW,EAACA,WAFT;AAGHe,MAAAA,GAAG,EAACZ,MAAM,CAACa;AAHR,KAAP;AAKH;AAEJ,CAfD;;AAiBA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAAA;;AAE1B,QAAM,CAACC,SAAD,EAAWC,iBAAX,IAA+BxB,UAAU,CAACK,kBAAD,EAAoBH,YAApB,CAA/C;;AAEC,QAAMuB,oBAAoB,GAAEhB,IAAD,IAAQ;AAE/Be,IAAAA,iBAAiB,CAAC;AAAChB,MAAAA,IAAI,EAAC,KAAN;AAAYC,MAAAA,IAAI,EAACA;AAAjB,KAAD,CAAjB;AACH,GAHD;;AAIA,QAAMiB,WAAW,GAAC;AACdvB,IAAAA,KAAK,EAACoB,SAAS,CAACpB,KADF;AAEdwB,IAAAA,OAAO,EAACF,oBAFM;AAGdN,IAAAA,GAAG,EAACI,SAAS,CAACJ;AAHA,GAAlB;AAMA,sBAAO,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEO,WAA7B;AAAA,cACFJ,KAAK,CAACM;AADJ;AAAA;AAAA;AAAA;AAAA,UAAP;AAIH;;GAlBQP,Y;;KAAAA,Y;AAoBT,eAAeA,YAAf","sourcesContent":["import { useReducer } from \"react\";\nimport CartContext from \"./cart-context\";\nconst defaultValue={\n    items:[],\n    totalAmount:0\n\n}\nconst reducerCartHandler =(state,action)=>{\n    if(action.type === 'ADD'){\n        \n        const totalAmount= state.totalAmount +action.item.price * action.item.quantity\n        const existingProduct=state.items.findIndex(action.item.id)\n        console.log(existingProduct)\n        const UpdatedItems=state.items.concat(action.item);\n\n        return {\n            items:UpdatedItems,\n            totalAmount:totalAmount,\n            img:action.productImage\n        }\n    }\n\n}\n\nfunction CartProvider(props) {\n\n   const [cartState,dispatchCartState]= useReducer(reducerCartHandler,defaultValue)\n\n    const addItemToCartHandler=(item)=>{\n        \n        dispatchCartState({type:'ADD',item:item})\n    }\n    const cartContext={\n        items:cartState.items,\n        addItem:addItemToCartHandler,\n        img:cartState.img\n    }\n\n    return <CartContext.Provider value={cartContext}>\n        {props.children}\n    </CartContext.Provider>\n\n}\n\nexport default CartProvider"]},"metadata":{},"sourceType":"module"}